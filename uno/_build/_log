### Starting build.
<<<<<<< HEAD
# Target: gamestate.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:gamestate.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules gamestate.mli > gamestate.mli.depends # cached
# Target: gamestate.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:gamestate.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o gamestate.cmi gamestate.mli
# Target: gamestate.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:gamestate.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules gamestate.ml > gamestate.ml.depends # cached
# Target: gamestate.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:gamestate.cmo, file:gamestate.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o gamestate.cmo gamestate.ml
# Target: command.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o command.cmi command.mli
# Target: command.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o command.cmo command.ml
# Target: player.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o player.cmi player.mli
# Target: player.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules player.ml > player.ml.depends # cached
# Target: player.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o player.cmo player.ml
# Target: main.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules main.ml > main.ml.depends # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o main.cmo main.ml # cached
# Target: author.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:author.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules author.mli > author.mli.depends # cached
# Target: author.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:author.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o author.cmi author.mli # cached
# Target: author.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:author.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules author.ml > author.ml.depends # cached
# Target: author.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:author.cmo, file:author.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -package yojson -package oUnit -o author.cmo author.ml # cached
=======
# Target: test.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules test.ml > test.ml.depends # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules command.mli > command.mli.depends # cached
# Target: gamestate.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:mli, file:gamestate.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules gamestate.mli > gamestate.mli.depends # cached
# Target: gamestate.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:mli, file:gamestate.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o gamestate.cmi gamestate.mli
# Target: player.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules player.mli > player.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o command.cmi command.mli
# Target: player.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o player.cmi player.mli
# Target: test.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o test.cmo test.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules command.ml > command.ml.depends # cached
# Target: gamestate.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:ml, file:gamestate.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules gamestate.ml > gamestate.ml.depends # cached
# Target: player.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), debug, extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -package yojson -package oUnit -modules player.ml > player.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o command.cmo command.ml
# Target: gamestate.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:gamestate.cmo, file:gamestate.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o gamestate.cmo gamestate.ml
# Target: player.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ANSITerminal -package yojson -package oUnit -o player.cmo player.ml
# Target: test.byte, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ANSITerminal -package yojson -package oUnit gamestate.cmo command.cmo player.cmo test.cmo -o test.byte
>>>>>>> c7529655a199b3d06e074a8fa0c7c512b613385f
# Compilation successful.
